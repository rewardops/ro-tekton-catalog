apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mx-release-task
spec:
  params:
    - name: APP_NAME
      type: string
    # - name: VERBOSE
    #   type: string
    # - name: IMAGE_LABEL
    #   type: string
  stepTemplate:
    env:
      - name: NPM_CONFIG_USERCONFIG
        value: /tekton/home/npm/.npmrc
      - name: HOME
        value: /tekton/home
    envFrom:
      - secretRef:
          name: jx-boot-job-env-vars
          optional: true
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 1000Mi
    workingDir: /workspace/source
  steps:
    # https://github.com/jenkins-x/jx3-pipeline-catalog/blob/master/tasks/git-clone/git-clone.yaml
    - name: fetch-repository
      image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream

    - name: ro-current-version
      image: uses:https://raw.githubusercontent.com/rewardops/ro-tekton-catalog/master/tasks/ro-current-version.yaml

    - name: ro-next-version
      image: uses:https://raw.githubusercontent.com/rewardops/ro-tekton-catalog/master/tasks/ro-next-version.yaml

    - name: ro-variables
      image: uses:https://raw.githubusercontent.com/rewardops/ro-tekton-catalog/master/tasks/ro-variables.yaml

    # https://github.com/jenkins-x-plugins/jx-registry
    - name: jx-registry
      runAfter:
        - [
            'fetch-repository',
            'ro-current-version',
            'ro-next-version',
            'ro-variables',
          ]
      image: ghcr.io/jenkins-x/jx-registry:0.1.10
      env:
        - name: CACHE_SUFFIX
          value: '/cache'
        - name: ECR_LIFECYCLE_POLICY
          value: |-
            {
              "rules": [
                {
                  "rulePriority": 1,
                  "description": "Expire images older than 180 days",
                  "selection": {
                    "tagStatus": "tagged",
                    "countType": "sinceImagePushed",
                    "tagPrefixList": ["0.0.0-"],
                    "countUnit": "days",
                    "countNumber": 180
                  },
                  "action": {
                    "type": "expire"
                  }
                }
              ]
            }
      script: |
        #!/usr/bin/env sh
        jx-registry create --app rewardops/mx-$(params.APP_NAME)

    # https://github.com/GoogleContainerTools/kaniko
    - name: build-and-push-docker
      runAfter:
        - jx-registry
      image: gcr.io/kaniko-project/executor:v1.12.1-debug
      script: |
        #!/busybox/sh
        source .jx/variables.sh
        echo "APP_NAME = $APP_NAME"
        echo "VERSION = $VERSION"
        echo "SEMVER = $SEMVER"

        cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json

        echo ">>> Building release mx-$(params.APP_NAME)"
        /kaniko/executor \
          --skip-unused-stages \
          --cache=true \
          --cache-repo=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/cache-mx-$(params.APP_NAME) \
          --cache-copy-layers \
          --cleanup \
          --context=/workspace/source \
          --dockerfile=apps/$(params.APP_NAME)/Dockerfile \
          --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/mx-$(params.APP_NAME):$SEMVER

    # https://github.com/jenkins-x-plugins/jx-changelog
    - name: promote-changelog
      runAfter:
        - build-and-push-docker
      image: ghcr.io/jenkins-x/jx-changelog:0.10.3
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh

        if [ -d "charts/$APP_NAME" ]; then
        jx gitops yset -p version -v "$SEMVER" -f ./charts/$APP_NAME/Chart.yaml
        jx gitops yset -p appVersion -v "$SEMVER" -f ./charts/$APP_NAME/Chart.yaml
        jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG -f ./charts/$APP_NAME/values.yaml
        jx gitops yset -p 'image.tag' -v "$SEMVER" -f ./charts/$APP_NAME/values.yaml;
        else echo no charts; fi

        git add * || true
        git commit -a -m "chore: release $VERSION" --allow-empty
        git tag -fa $VERSION -m "Release version $VERSION"
        git push --force origin $VERSION

        jx changelog create --version ${VERSION}

    # https://github.com/jenkins-x/jx (1 of 3 artifacts)
    - name: promote-helm-release
      runAfter:
        - promote-changelog
      image: ghcr.io/jenkins-x/jx-boot:3.10.86
      script: |
        #!/usr/bin/env sh
        VERSION=$(cat VERSION)
        SEMVER=$(cat /tekton/results/next-version)
        cp /tekton/results/next-version VERSION
        sed -i "s/$VERSION/$SEMVER/" .jx/variables.sh
        source .jx/variables.sh
        jx gitops helm release

    # https://github.com/jenkins-x-plugins/jx-promote
    - name: promote-release
      runAfter:
        - promote-helm-release
      image: ghcr.io/jenkins-x-plugins/jx-promote:0.6.5
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh
        jx promote -a mx-$(params.APP_NAME) -b  --timeout 1h --no-poll --env staging
        jx promote -a mx-$(params.APP_NAME) -b  --timeout 1h --no-poll --env uat
        jx promote -a mx-$(params.APP_NAME) -b  --timeout 1h --no-poll --env prod-mx-$(params.APP_NAME)
